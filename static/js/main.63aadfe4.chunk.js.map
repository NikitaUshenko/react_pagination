{"version":3,"sources":["components/Pagination.js","components/List.js","App.js","index.js"],"names":["Pagination","_ref","total","perPage","page","handleClick","handleChange","withInfo","pagesArr","prevBtn","classNames","list-item","is-active","nextBtn","Math","ceil","i","push","react_default","a","createElement","Fragment","name","id","onChange","event","value","className","type","onClick","map","pageNum","navClass","is-shown","key","defaultProps","List","people","filter","man","index","getPeople","Object","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","App","state","currentPage","onPerPageChange","target","_this","setState","onPageChange","_this$state","btnVal","prevState","length","_this$state2","components_List","components_Pagination","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"gRAIMA,EAAa,SAAAC,GAoBjB,IAbI,IANJC,EAMID,EANJC,MACAC,EAKIF,EALJE,QACAC,EAIIH,EAJJG,KACAC,EAGIJ,EAHJI,YACAC,EAEIL,EAFJK,aACAC,EACIN,EADJM,SAEMC,EAAW,GAEXC,EAAUC,IAAW,CACzBC,aAAa,EACbC,YAAsB,IAATR,IAGTS,EAAUH,IAAW,CACzBC,aAAa,EACbC,YAAaR,IAASU,KAAKC,KAAKb,EAAQC,KAGjCa,EAAI,EAAGA,GAAKF,KAAKC,KAAKb,EAAQC,GAAUa,GAAK,EACpDR,EAASS,KAAKD,GAGhB,OACEE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,UAAQE,KAAK,QAAQC,GAAG,QAAQC,SAAU,SAAAC,GAAK,OAAInB,EAAamB,KAC9DP,EAAAC,EAAAC,cAAA,UAAQM,MAAM,KAAd,KACAR,EAAAC,EAAAC,cAAA,UAAQM,MAAM,MAAd,MACAR,EAAAC,EAAAC,cAAA,UAAQM,MAAM,MAAd,OAGAnB,EAEIW,EAAAC,EAAAC,cAAA,SACGjB,GAAWC,EAAO,GAAK,EAD1B,IAGGD,EAAUC,EAAOF,EACdA,EACAC,EAAUC,EACb,IANH,KAQG,IACAF,GAGH,GAGNgB,EAAAC,EAAAC,cAAA,MAAIO,UAAU,QACZT,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEO,UAAWlB,EACXmB,KAAK,SACLC,QAAS,SAAAJ,GAAK,OAAIpB,EAAYoB,IAC9BC,MAAM,QAJR,SASDlB,EAASsB,IAAI,SAACC,GACb,IAAMC,EAAWtB,IAAW,CAC1BC,aAAa,EACbsB,YAAY,EACZrB,YAAaR,IAAS2B,IAGxB,OACEb,EAAAC,EAAAC,cAAA,MAAIc,IAAKH,GACPb,EAAAC,EAAAC,cAAA,UACEO,UAAWK,EACXJ,KAAK,SACLC,QAAS,SAAAJ,GAAK,OAAIpB,EAAYoB,IAC9BC,MAAOK,GAENA,MAMTb,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEO,UAAWd,EACXe,KAAK,SACLC,QAAS,SAAAJ,GAAK,OAAIpB,EAAYoB,IAC9BC,MAAM,QAJR,YAcV1B,EAAWmC,aAAe,CACxB5B,UAAU,GAYGP,QCtFAoC,EAxBF,SAAAnC,GAA+B,IAA5BoC,EAA4BpC,EAA5BoC,OAAQjC,EAAoBH,EAApBG,KAAMD,EAAcF,EAAdE,QACxB+B,EAAM,EAEV,OACEhB,EAAAC,EAAAC,cAAA,UAEIiB,EAAOC,OAAO,SAACC,EAAKC,GAAN,OACVrC,IAAYC,EAAO,IAAOoC,GAASA,IAAWrC,GAAWC,EAAO,IACjE0B,IAAI,SAACS,GAGN,OAFAL,GAAO,EAEAhB,EAAAC,EAAAC,cAAA,MAAIc,IAAKA,GAAMK,EAAIjB,UCR9BmB,EAAS,eAAAxC,EAAAyC,OAAAC,EAAA,EAAAD,CAAAE,EAAAzB,EAAA0B,KAAG,SAAAC,IAAA,IAAAC,EAAAV,EAAA,OAAAO,EAAAzB,EAAA6B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,aAEZ,oEAFYF,EAAAE,KAAA,EAGOC,MADnB,qEAFY,cAGVL,EAHUE,EAAAI,KAAAJ,EAAAE,KAAA,EAIKJ,EAASO,OAJd,cAIVjB,EAJUY,EAAAI,KAAAJ,EAAAM,OAAA,SAMTlB,GANS,wBAAAY,EAAAO,SAAAV,MAAH,yBAAA7C,EAAAwD,MAAAC,KAAAC,YAAA,GAkFAC,6MAxEbC,MAAQ,CACNC,YAAa,EACb3D,QAAS,EACTkC,OAAQ,MAWV0B,gBAAkB,SAACtC,GACjB,IAAMtB,EAAUsB,EAAMuC,OAAOtC,MAE7BuC,EAAKC,SAAS,CACZ/D,UACA2D,YAAa,OAIjBK,aAAe,SAAC1C,GAAU,IAAA2C,EACIH,EAAKJ,MAAzBxB,EADgB+B,EAChB/B,OAAQlC,EADQiE,EACRjE,QACVkE,EAAS5C,EAAMuC,OAAOtC,MAE5B,OAAQ2C,GACN,IAAK,OACCJ,EAAKJ,MAAMC,YAAc,GAC3BG,EAAKC,SAAS,SAAAI,GAAS,MAAK,CAC1BR,YAAaQ,EAAUR,YAAc,KAIzC,MAEF,IAAK,OACCG,EAAKJ,MAAMC,YAAchD,KAAKC,KAAKsB,EAAOkC,OAASpE,IACrD8D,EAAKC,SAAS,SAAAI,GAAS,MAAK,CAC1BR,YAAaQ,EAAUR,YAAc,KAIzC,MAEF,QACEG,EAAKC,SAAS,CACZJ,aAAcO,uNAzCC5B,WAAfJ,SAENqB,KAAKQ,SAAS,CACZ7B,8IA2CK,IAAAmC,EACkCd,KAAKG,MAAtCC,EADDU,EACCV,YAAazB,EADdmC,EACcnC,OAAQlC,EADtBqE,EACsBrE,QAE7B,OACEe,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAACqD,EAAD,CAAMpC,OAAQA,EAAQjC,KAAM0D,EAAa3D,QAASA,IAClDe,EAAAC,EAAAC,cAACsD,EAAD,CACExE,MAAOmC,EAAOkC,OACdpE,QAASA,EACTC,KAAM0D,EACNzD,YAAaqD,KAAKS,aAClB7D,aAAcoD,KAAKK,gBACnBxD,UAAQ,YAlEAoE,IAAMC,WCXxBC,IAASC,OAAO5D,EAAAC,EAAAC,cAAC2D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.63aadfe4.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst Pagination = ({\n  total,\n  perPage,\n  page,\n  handleClick,\n  handleChange,\n  withInfo,\n}) => {\n  const pagesArr = [];\n\n  const prevBtn = classNames({\n    'list-item': true,\n    'is-active': page !== 1,\n  });\n\n  const nextBtn = classNames({\n    'list-item': true,\n    'is-active': page !== Math.ceil(total / perPage),\n  });\n\n  for (let i = 1; i <= Math.ceil(total / perPage); i += 1) {\n    pagesArr.push(i);\n  }\n\n  return (\n    <>\n      <select name=\"items\" id=\"items\" onChange={event => handleChange(event)}>\n        <option value=\"5\">5</option>\n        <option value=\"10\">10</option>\n        <option value=\"20\">20</option>\n      </select>\n      {\n        withInfo\n          ? (\n            <p>\n              {perPage * (page - 1) + 1 }\n              -\n              {perPage * page > total\n                ? total\n                : perPage * page}\n              {' '}\n                  of\n              {' '}\n              {total}\n            </p>\n          )\n          : ''\n      }\n\n      <ul className=\"list\">\n        <li>\n          <button\n            className={prevBtn}\n            type=\"button\"\n            onClick={event => handleClick(event)}\n            value=\"prev\"\n          >\n            prev\n          </button>\n        </li>\n        {pagesArr.map((pageNum) => {\n          const navClass = classNames({\n            'list-item': true,\n            'is-shown': true,\n            'is-active': page === pageNum,\n          });\n\n          return (\n            <li key={pageNum}>\n              <button\n                className={navClass}\n                type=\"button\"\n                onClick={event => handleClick(event)}\n                value={pageNum}\n              >\n                {pageNum}\n              </button>\n            </li>\n          );\n        })}\n\n        <li>\n          <button\n            className={nextBtn}\n            type=\"button\"\n            onClick={event => handleClick(event)}\n            value=\"next\"\n          >\n            next\n          </button>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nPagination.defaultProps = {\n  withInfo: false,\n};\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  withInfo: PropTypes.bool,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst List = ({ people, page, perPage }) => {\n  let key = 0;\n\n  return (\n    <ul>\n      {\n        people.filter((man, index) => (\n          (+perPage * (+page - 1)) <= index && index <= (+perPage * +page - 1)\n        )).map((man) => {\n          key += 1;\n\n          return <li key={key}>{man.name}</li>;\n        })\n      }\n    </ul>\n  );\n};\n\nList.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  page: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n};\n\nexport default List;\n","import React from 'react';\n\nimport './App.css';\nimport Pagination from './components/Pagination';\nimport List from './components/List';\n\nconst getPeople = async() => {\n  const url\n    = 'https://mate-academy.github.io/react_people-table/api/people.json';\n  const response = await fetch(url);\n  const people = await response.json();\n\n  return people;\n};\n\nclass App extends React.Component {\n  state = {\n    currentPage: 1,\n    perPage: 5,\n    people: [],\n  };\n\n  async componentDidMount() {\n    const people = await getPeople();\n\n    this.setState({\n      people,\n    });\n  }\n\n  onPerPageChange = (event) => {\n    const perPage = event.target.value;\n\n    this.setState({\n      perPage,\n      currentPage: 1,\n    });\n  };\n\n  onPageChange = (event) => {\n    const { people, perPage } = this.state;\n    const btnVal = event.target.value;\n\n    switch (btnVal) {\n      case 'prev':\n        if (this.state.currentPage > 1) {\n          this.setState(prevState => ({\n            currentPage: prevState.currentPage - 1,\n          }));\n        }\n\n        break;\n\n      case 'next':\n        if (this.state.currentPage < Math.ceil(people.length / perPage)) {\n          this.setState(prevState => ({\n            currentPage: prevState.currentPage + 1,\n          }));\n        }\n\n        break;\n\n      default:\n        this.setState({\n          currentPage: +btnVal,\n        });\n    }\n  };\n\n  render() {\n    const { currentPage, people, perPage } = this.state;\n\n    return (\n      <div className=\"App\">\n        <List people={people} page={currentPage} perPage={perPage} />\n        <Pagination\n          total={people.length}\n          perPage={perPage}\n          page={currentPage}\n          handleClick={this.onPageChange}\n          handleChange={this.onPerPageChange}\n          withInfo\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}