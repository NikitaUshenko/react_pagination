{"version":3,"sources":["components/Pagination.js","App.js","index.js"],"names":["Pagination","_ref","total","perPage","page","handleClick","handleChange","pagesArr","prevBtn","classNames","list-item","is-active","nextBtn","Math","ceil","i","push","react_default","a","createElement","Fragment","name","id","onChange","event","value","className","type","onClick","map","pageNum","navClass","is-shown","key","getPeople","Object","asyncToGenerator","regenerator_default","mark","_callee","response","people","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","App","state","currentPage","onPerPageChange","target","_this","setState","onPageChange","_this$state","btnVal","prevState","length","_this$state2","components_Pagination","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f9c2bdad.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nconst Pagination = ({ total, perPage, page, handleClick, handleChange}) => {\n  const pagesArr = [];\n\n  const prevBtn = classNames({\n    'list-item': true,\n    'is-active': page !== 1,\n  });\n\n  const nextBtn = classNames({\n    'list-item': true,\n    'is-active': page !== Math.ceil(total / perPage),\n  });\n\n  for (let i = 1; i <= Math.ceil(total / perPage); i += 1) {\n    pagesArr.push(i);\n  }\n\n  return (\n    <>\n      <select name=\"items\" id=\"items\" onChange={event => handleChange(event)}>\n        <option value=\"5\">5</option>\n        <option value=\"10\">10</option>\n        <option value=\"20\">20</option>\n      </select>\n\n      <p>{perPage*(page-1)+1}-{perPage*page > total ? total : perPage*page} of {total}</p>\n\n      <ul className=\"list\">\n        <li>\n          <button\n            className={prevBtn}\n            type=\"button\"\n            onClick={event => handleClick(event)}\n            value=\"prev\"\n          >\n            prev\n          </button>\n        </li>\n        {pagesArr.map((pageNum) => {\n          const navClass = classNames({\n            'list-item': true,\n            'is-shown': true,\n            'is-active': page === pageNum,\n          });\n\n          return (\n            <li key={pageNum}>\n              <button\n                className={navClass}\n                type=\"button\"\n                onClick={event => handleClick(event)}\n                value={pageNum}\n              >\n                {pageNum}\n              </button>\n            </li>\n          );\n        })}\n\n        <li>\n          <button\n            className={nextBtn}\n            type=\"button\"\n            onClick={event => handleClick(event)}\n            value=\"next\"\n          >\n            next\n          </button>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\n\nimport './App.css';\nimport Pagination from './components/Pagination';\n\nconst getPeople = async() => {\n  const url\n    = 'https://mate-academy.github.io/react_people-table/api/people.json';\n  const response = await fetch(url);\n  const people = await response.json();\n\n  return people;\n};\n\nclass App extends React.Component {\n  state = {\n    currentPage: 2,\n    perPage: 5,\n    people: [],\n  };\n\n  async componentDidMount() {\n    const people = await getPeople();\n\n    this.setState({\n      people,\n    });\n  }\n\n  onPerPageChange = (event) => {\n    const perPage = event.target.value;\n\n    this.setState({\n      perPage,\n      currentPage: 1,\n    });\n  };\n\n  onPageChange = (event) => {\n    const { people, perPage } = this.state;\n    const btnVal = event.target.value;\n\n    switch (btnVal) {\n      case 'prev':\n        if (this.state.currentPage > 1) {\n          this.setState(prevState => ({\n            currentPage: prevState.currentPage - 1,\n          }));\n        }\n\n        break;\n\n      case 'next':\n        if (this.state.currentPage < Math.ceil(people.length / perPage)) {\n          this.setState(prevState => ({\n            currentPage: prevState.currentPage + 1,\n          }));\n        }\n\n        break;\n\n      default:\n        this.setState({\n          currentPage: +btnVal,\n        });\n    }\n  };\n\n  render() {\n    const { currentPage, people, perPage } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Pagination\n          total={people.length}\n          perPage={perPage}\n          page={currentPage}\n          handleClick={this.onPageChange}\n          handleChange={this.onPerPageChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}